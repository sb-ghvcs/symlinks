name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-action-linux:
    name: Symlink Actions Test on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Create test file
        id: create-test-file
        run: |
          echo "test file contents in test.txt" >> test.txt

      - name: Run Symlink
        id: run-symlink
        uses: ./
        with:
          sourcePath: ./test.txt
          destinationPath: ./test-symlink.txt

      - name: Test Symlink
        id: test-symlink
        run: |
          sourcePath=${{ steps.run-symlink.outputs.source-path }}
          outputPath=${{ steps.run-symlink.outputs.output-path }}
          echo "sourcePath: $sourcePath"
          echo "outputPath: $outputPath"
          if [ -L "$outputPath" ]; then
            target=$(readlink -f "$outputPath")
            if [ "$target" = "$sourcePath" ]; then
              echo "Symlink points to the correct target."
            else
              echo "Symlink does not point to the correct target."
              exit 1
            fi
          else
            echo "$outputPath is not a symlink."
            exit 1
          fi

  test-action-windows:
    name: Symlink Actions Test on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Create test file
        id: create-test-file
        run: |
          echo test file contents in test.txt >> test.txt

      - name: Run Symlink
        id: run-symlink
        uses: ./
        with:
          sourcePath: ./test.txt
          destinationPath: ./test-symlink.lnk

      - name: Test Symlink
        id: test-symlink
        run: |
          $sourcePath="${{ steps.run-symlink.outputs.source-path }}"
          $outputPath="${{ steps.run-symlink.outputs.output-path }}"
          Write-Host "sourcePath: $sourcePath"
          Write-Host "outputPath: $outputPath"
          # Check if the output path is a shortcut
          if (Test-Path $outputPath -PathType Leaf) {
            $shortcut = New-Object -ComObject WScript.Shell
            $shortcutTarget = $shortcut.CreateShortcut($outputPath).TargetPath
            if ($shortcutTarget -eq (Resolve-Path $sourcePath).Path) {
              Write-Host "The output path $outputPath is a shortcut to the source path $sourcePath."
            } else {
              Write-Host "The output path $outputPath is not a shortcut to the source path $sourcePath"
              exit 1
            }
          } else {
            Write-Host "The output path $outputPath does not exist or is not a file."
            exit 1
          }
